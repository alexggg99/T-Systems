<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.2.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
    <tx:annotation-driven transaction-manager="transactionManager" />
    <context:component-scan base-package="ru.tsystems.project.controllers" />
    <context:component-scan base-package="ru.tsystems.project.domain" />
    <context:component-scan base-package="ru.tsystems.project.services" />
    <!-- this is the service object that we want to make transactional -->
    <bean id="stationService" class="ru.tsystems.project.services.implementations.StationServiceImplementation"/>
    <bean id="trainService" class="ru.tsystems.project.services.implementations.TrainServiceImpl"/>
    <bean id="routeEntityService" class="ru.tsystems.project.services.implementations.RouteEntityServiceImpl"/>
    <bean id="ticketService" class="ru.tsystems.project.services.implementations.TicketServiceImplementation"/>
    <bean id="passengerService" class="ru.tsystems.project.services.implementations.PassengerServiceImplementation"/>
    <bean
        class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    <bean
        id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="transportDB" />
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
            </bean>
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
                <!-- <entry key="hibernate.hbm2ddl.auto" value="none" /> -->
                <entry key="hibernate.format_sql" value="true" />
            </map>
        </property>
    </bean>
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    <bean
        id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/transportDB"/>
        <property name="username" value="root"/>
        <property name="password" value="wwAP88ws"/>
    </bean>
    
    <import resource="security.xml"/>
    
    <mvc:annotation-driven>
        <mvc:message-converters>
            <!-- Use the HibernateAware mapper instead of the default -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
</beans> 