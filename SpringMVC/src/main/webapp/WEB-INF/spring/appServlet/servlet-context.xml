<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc 
                                http://www.springframework.org/schema/mvc/spring-mvc.xsd
                                http://www.springframework.org/schema/beans 
                                http://www.springframework.org/schema/beans/spring-beans.xsd
                                http://www.springframework.org/schema/context 
                                http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <!--<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>-->
    
    <!-- Configure Apache Tiles for the view -->
    <!-- Configurer. For page mapping see tiles.xml -->
    <beans:bean id="tilesConfigurer"
                class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/tiles.xml</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory"/>
    </beans:bean>
    <!--viewResolver-->
    <beans:bean id="viewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
    </beans:bean>
	
    <context:component-scan base-package="ru.tsystems.project" />
    
    <interceptors>
        <beans:bean
            class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <beans:property name="paramName" value="locale" />
        </beans:bean>
    </interceptors>

    <!--default locale for bdmgk application-->
    <beans:bean id="defaultLocale" class="java.util.Locale">
        <beans:constructor-arg index="0" value="en" />
    </beans:bean>

    <!-- i18n -->
    <beans:bean id="localeResolver"
      class="org.springframework.web.servlet.i18n.CookieLocaleResolver" >
        <beans:property name="defaultLocale" ref="defaultLocale" />
    </beans:bean>

    <!--ReloadableResourceBundleMessageSource is alternative to ResourceBundleMessageSource.
    This bean is using for changing local inside interseptor. -->
    <beans:bean id="messageSource"
      class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <beans:property name="basenames">
            <beans:list>
                <beans:value>classpath:/messages</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="useCodeAsDefaultMessage" value="true" />
    </beans:bean>
    <!-- i18n end -->
    
</beans:beans>
